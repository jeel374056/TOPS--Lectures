{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\colortbl ;\red255\green0\blue0;\red192\green80\blue77;\red155\green0\blue211;}
{\*\generator Riched20 6.3.9600}\viewkind4\uc1 
\pard\f0\fs32\par

\pard\qc\b\fs72 ------\cf1\ul\i SQL ASSIGNMENT\cf0\ulnone\i0 ------\par
\fs56\par
\b0\fs32\par

\pard\par
\par
\cf2\b B1.   How to Create an Table student write an SQL Query ?\par
\cf0\b0\par
\b Ans. =\b0\par

\pard\li1440 CREATE TABLE Student \par
(\par
Rollno INT,\par
\par
NAME VARCHAR(20),\par
\par
Branch VARCHAR(30),\par
\par
PRIMARY KEY(Rollno)\par
\par
);\par

\pard\par
\par
\par
\par
\cf2\b B2.  How to Create a Exam table with Foreign key on rollno write  a SQL Query ?\par
\cf0\par
Ans. = \par
\b0\par

\pard\li1440 CREATE TABLE Exam \par
(\par
Rollno INT,\par
\par
S_Code VARCHAR(20),\par
\par
Marks INT,\par
\par
P_Code VARCHAR(20)\par
\par
FOREIGN KEY(Rollno) REFERENCES Student(Rollno)\par
);\par

\pard\par
\par
\par
\cf2\b B3.   What is SQL Key Constraints write an Example of SQL Key Constraints ?\par
\cf0\par
Ans. = \par
\b0\par

\pard\li1440 - UNIQUE KEY\par
\par
- PRIMARY KEY\par
\par
- FOREIGN KEY\par

\pard\par
\par
\cf2\b B4.  What is SQL View Create a View of Student Table ?\par
\cf0\par
Ans. = \par
\b0\tab\tab SELECT * FROM STUDENT;\par
\par
\par
\par
\cf2\b B5. How to Create a Table user write a SQL query ?\par
\cf0\par
Ans. = \par
\b0\par

\pard\li1440 CREATE TABLE USER\par
(\par
First_Name VARCHAR(20), \par
\par
Last_Name VARCHAR(20), \par
\par
Address VARCHAR(40), \par
\par
City VARCHAR(20), \par
\par
Age INT\par
);\par

\pard\par
\par
\cf2\b B6.  What is SQL and How to Create a table with Forign Key ?\par
\cf0\par
Ans. = \b0\par
\par
    SQL = STRUCTURED QUERY LANGUAGE\par
\par

\pard\li1440 CREATE TABLE table_name \par
(\par
    column1 datatype,\par
\par
    column2 datatype,\par
\par
    column3 datatype,\par
   ....\par
);\par

\pard\par
\par
\cf2\b B7. What is store Proceedure write a query of creating store      Proceedure ?\par
\cf0\par
Ans. =\par

\pard\li1440\b0 DELIMITER // \par
\par
CREATE PROCEDURE EmpData_Salary()\par
\par
BEGIN\par
SELECT * FROM employee WHERE salary > 700000;\par
END //\par
\par
DELIMITER ;\par
\par
\par
CALL EmpData_Salary;\par

\pard\par
\par
\par
\par
\cf2\b B8.  What is save Point How to Create a save Point write a Query ?\par
\cf0\par
Ans. = \par
\b0\tab START TRANSACTION;\par
\par
\tab INSERT INTO student values (4,'John','Computer \tab Science');\par
\tab\par
\tab SAVEPOINT a;\par
\par
\tab UPDATE student SET Name = 'Johnny' WHERE Rollno = 3;\par
\par
\tab ROLLBACK TO a;\par
\par
\par
\cf2\b B9.  What is trigger and how to Create a Trigger in SQL ?\par
\cf0\par
Ans.=\par

\pard\li720\b0 CREATE TRIGGER EmpBackup AFTER DELETE\par
ON employee\par
FOR EACH ROW\par
\par
INSERT INTO empbackup VALUES\par
(OLD.Employee_ID, OLD.First_Name,OLD.Last_Name,OLD.Salary,OLD.Joining_Date,OLD.Department);\par

\pard\tab\tab\tab\tab\tab\tab\tab\tab\tab\par
\par
\b\par

\pard\sa200\sl276\slmult1\cf3\lang9 ==================================================================================================================\par
\cf2\b0\par

\pard\nowidctlpar\sa200\sl276\slmult1\b I1 -- Get First_Name from employee table using alias name \ldblquote Employee Name\rdblquote .\par
\cf0 Ans.  \b0\par
\tab SELECT  First_Name  AS  Employee_Name  FROM  employee ;\par
\par
\cf2\b I2 -- Get FIRST_NAME, Joining year, Joining Month and Joining Date from employee table.\par
\cf0 Ans. \b0\par

\pard\nowidctlpar\li720\sa200\sl276\slmult1  SELECT  First_Name  ,  year(Joining_Date) ,  month(Joining_Date),  date(Joining_Date)     FROM  employee;\par

\pard\nowidctlpar\sa200\sl276\slmult1\par
\cf2\b I3 -- Get all employee details from the employee table order by First_Name Ascending and Salary descending.\par
\cf0 Ans. \par
\b0\tab SELECT* FROM employee  ORDER BY First_Name ;\par
\tab SELECT * FROM employee ORDER BY Salary DESC ;\par
\cf2\par
\b I4 -- Get employee details from employee table whose first name contains \lquote o\rquote .\par
\cf0 Ans.  \b0\par

\pard\nowidctlpar\fi720\sa200\sl276\slmult1 SELECT  *  FROM  employee  WHERE  First_Name  LIKE   ' % o % ' ;\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf2\par
\b I5 -- Get employee details from employee table whose joining month is \ldblquote January\rdblquote .\par
\cf0 Ans.  \par

\pard\nowidctlpar\fi720\sa200\sl276\slmult1\b0 SELECT  *  FROM  employee  WHERE   month(Joining_Date) =  '1'  ;\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf2\par
\b I6 -- Get department, total salary with respect to a department from employee table order by total salary  descending.\par
\cf0 Ans. \b0\par

\pard\nowidctlpar\li720\sa200\sl276\slmult1 SELECT  Department  ,  sum(Salary)  FROM  employee  GROUP BY  Department ORDER BY Salary DESC ;\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf2\par
\b I7 -- Get department wise maximum salary from employee table order by salary ascending.\par
\cf0 Ans.  \b0\par

\pard\nowidctlpar\li720\sa200\sl276\slmult1 SELECT   Department , max(Salary)  FROM  employee GROUP BY   Department   ORDER BY max(Salary)   ASC ;\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf2\par
\b I8 -- Select first_name, incentive amount from employee and incentives table for those employees who have incentives and incentive amount greater than 3000.\par
\cf0 Ans.  \b0\tab\par

\pard\nowidctlpar\fi720\sa200\sl276\slmult1 SELECT   employee.First_Name   ,   incentive.Incentive_Amount    FROM    employee \tab INNER\tab JOIN   incentive   ON    Employee_ID = Employee_ref_Id  WHERE \tab Incentive_Amount  > \tab 3000 ;\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf2\par
\b I9 -- Select 2nd Highest salary from employee table.\par
\cf0 Ans. \b0   \par

\pard\nowidctlpar\fi720\sa200\sl276\slmult1 SELECT max(Salary) FROM employee WHERE Salary \par

\pard\nowidctlpar\sa200\sl276\slmult1\tab  < ( SELECT max(Salary) FROM employee ) ;\par
\par
\cf2\par
\b I10 -- Select first_name, incentive amount from employee and incentives table for all \tab employees who got incentives using left join.\par
\cf0 Ans. \b0\par

\pard\nowidctlpar\li720\sa200\sl276\slmult1 SELECT   employee.First_Name  ,   incentive.Incentive_Amount   FROM  employee   L\par
EFT JOIN   incentive    ON    Employee_ID = Employee_ref_Id     WHERE       Incentive_Amount <> 0   OR   Incentive_Amount <> NULL;\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf2\b\par
I11 -- Create View OF Employee table in which store first name ,last name and salary only.\par
\cf0 Ans.\b0\par

\pard\nowidctlpar\fi720\sa200\sl276\slmult1 SELECT  First_Name ,  Last_Name  , Salary  FROM employee ;\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf2\par

\pard\widctlpar\b I12 -- Create Procedure to find out department wise highest salary.\par
\cf0 Ans.\b0  \par

\pard\widctlpar\li720 SELECT  Department ,  max(Salary) FROM  employee  GROUP BY  Department  ;\par
\cf2\b\par
\par

\pard\lang1033 I13 -- Create After Insert trigger on Employee table which insert records in view table.\par
\cf0 Ans.\b0\par
\tab # Create Table For BackUp Employee Details  #\par
\par
CREATE TABLE EmpBackup (Employee_ID INT,\par
First_Name VARCHAR(20),\par
Last_Name VARCHAR(20),\par
Salary INT,\par
Joining_Date DATETIME,\par
Department VARCHAR(20));\par
\par
\par
CREATE TRIGGER BackUpEmp AFTER DELETE\par
ON employee\par
FOR EACH ROW\par
INSERT INTO empbackup VALUES\par
(old.Employee_Id, old.First_Name, old.Last_Name, old. Salary, old.Joining_Date, old.Department);\par
\par
DELETE FROM employee WHERE First_Name = 'Jerry';\par

\pard\widctlpar\li720\lang9\par

\pard\nowidctlpar\sa200\sl276\slmult1\b\tab\par

\pard\sa200\sl276\slmult1\cf3\par
==================================================================================================================\par
\cf0\b0\par
\cf2\par

\pard\b\lang1033 A1.  All orders for more than $1000.\par
\cf0 Ans.\b0  \par
\tab  SELECT  * FROM  ORDER1  WHERE   AMT  > 1000 ;\par
\par
\cf2\par
\b A2.  Names and cities of all salespeople in London with commission above 0.10.\par
\cf0 Ans.\b0   \par

\pard\li720 SELECT  Sname , City  FROM  salesperson  WHERE  city = 'london'  AND  comm > 0.10 ;\par

\pard\par
\cf2\par
\b A8.  All salespeople either in Barcelona or in London. \par
\cf0 Ans.  \par

\pard\li720\b0 SELECT   SName ,  City  FROM   salesperson   WHERE   City = 'Barcelona'   OR   City = 'London' ;\par

\pard\b\par
\cf2\par
A9.  All salespeople with commission between 0.10 and 0.12. (Boundary values shouldbe excluded). \par
\cf0 Ans. \par
\b0\tab  SELECT  *  FROM  salesperson WHERE  comm   BETWEEN   \tab 0.10   AND    0.12  ;\par
\par
\cf2\par
\b A10.  All customers excluding those with rating <= 100 unless they are located in Rome.\par
\cf0 Ans.\b0   \par
\tab SELECT * FROM   customer   WHERE   Rating  >=  100   AND  \tab City  NOT IN  ('Rose','Roe') ;\par
\b\par
\cf2\par
A11.  All orders except those with 0 or NULL value in amt field.\par
\cf0 Ans. \par
\tab\b0  SELECT  *  FROM   order1 WHERE   AMT  <>  0  OR   AMT  <>  NULL ;\par
\par
\cf2\par
\b A12.  Count the number of salespeople currently listing orders in the order table.\par
\cf0 Ans.  \par
\tab\b0 SELECT  count(DISTINCT Sno)   AS    Salesperson   FROM   order1 ;\par
\par
\par
\cf2\b\par
A13.  Largest order taken by each salesperson, datewise.\par
\cf0 Ans.  \par
\tab\b0 SELECT Sno, max(AMT) AS Maximum_Order,ODE FROM \tab Order1 GROUP BY ODE ORDER \tab BY ODE;\par
\par
\par
\cf2\par
\b A14.  Largest order taken by each salesperson with order value more than $3000.\par
\cf0 Ans. \b0  \par
\tab SELECT Sno , max(AMT) FROM order1 WHERE AMT > 3000 \tab GROUP BY Sno;\par

\pard\sa200\sl276\slmult1\lang9\par
\par
\par
}
 